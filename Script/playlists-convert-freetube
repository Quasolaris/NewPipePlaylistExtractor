#!/bin/bash

: <<'DOC_COMMENT'
termux Install dependencies:
pkg install -y jq python-yt-dlp uuid-utils sed coreutils

Make executable:
chmod +x playlists-convert-freetube.sh

Run:
bash playlists-convert-freetube.sh

playlists.csv to freetube-playlists.db

DOC_COMMENT

generate_random_uuid() {
  uuidgen -r | tr A-F a-f
}

process_playlist() {
  local playlist_name="$1"
  local urls="$2"
  local current_ts=$(date +%s%3N)
  local _id="ft-playlist--$(generate_random_uuid)"
  
  # Process videos with integer timestamps
  local videos=$(
    echo "$urls" | 
    tr -d "[]'\" " |
    tr "," "\n" |
    sed '/^$/d' |
    while read url; do
      [ -z "$url" ] && continue
      yt-dlp --dump-json "$url" | jq --arg uuid "$(generate_random_uuid)" '
        {
          videoId: .id,
          title: .title,
          author: .uploader,
          authorId: .channel_id,
          lengthSeconds: .duration,
          published: (.timestamp * 1000 | floor),
          timeAdded: (now * 1000 | floor),
          playlistItemId: $uuid,
          type: "video"
        }'
    done | jq -s .
  )
  
  # Corrected jq syntax with proper try/catch
  jq -n --arg name "$playlist_name" \
         --argjson vids "$videos" \
         --arg id "$_id" \
         --argjson ts "$current_ts" '
    {
      playlistName: $name,
      protected: false,
      description: "",
      videos: $vids,
      _id: $id,
      createdAt: $ts,
      lastUpdatedAt: (try ($vids | map(.timeAdded) | max) catch $ts)
    }' | jq -c
}

> freetube-playlists.db

echo '{"playlistName":"Favorites","protected":false,"description":"Your favorite videos","videos":[],"_id":"favorites","createdAt":'$(date +%s%3N)',"lastUpdatedAt":'$(date +%s%3N)'}' >> freetube-playlists.db

while IFS= read -r line; do
  playlist_name=$(awk -F',' '{print $1}' <<< "$line" | tr -d '"')
  urls=$(awk -F',' '{print substr($0, index($0,$2))}' <<< "$line")
  process_playlist "$playlist_name" "$urls" >> freetube-playlists.db
done < playlists.csv
